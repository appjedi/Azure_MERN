{"version":3,"sources":["components/navbar.js","components/recordList.js","components/edit.js","components/create.js","App.js","index.js"],"names":["Navbar","className","to","style","src","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Record","props","record","name","position","level","_id","onClick","deleteRecord","RecordList","useState","records","setRecords","a","fetch","method","newRecords","filter","el","useEffect","response","ok","message","statusText","window","alert","json","getRecords","length","marginTop","map","Edit","form","setForm","params","useParams","navigate","useNavigate","updateForm","value","prev","e","preventDefault","editedPerson","body","JSON","stringify","headers","toString","fetchData","onSubmit","htmlFor","onChange","target","checked","Create","newPerson","catch","error","App","margin","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c0adcdc.chunk.js","sourcesContent":["import React from \"react\";\n\n// We import bootstrap to make our application look better.\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n// We import NavLink to utilize the react router.\nimport { NavLink } from \"react-router-dom\";\n\n// Here, we display our Navbar\nexport default function Navbar() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <NavLink className=\"navbar-brand\" to=\"/\">\n        <img style={{\"width\" : 25 + '%'}} src=\"https://d3cy9zhslanhfa.cloudfront.net/media/3800C044-6298-4575-A05D5C6B7623EE37/4B45D0EC-3482-4759-82DA37D8EA07D229/webimage-8A27671A-8A53-45DC-89D7BF8537F15A0D.png\" alt=\"MongoDB logo of green leaf and word MongoDB\"></img>\n        </NavLink>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/create\">\n                Create Record\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Record = (props) => (\n  <tr>\n    <td>{props.record.name}</td>\n    <td>{props.record.position}</td>\n    <td>{props.record.level}</td>\n    <td>\n      <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\n      <button className=\"btn btn-link\"\n        onClick={() => {\n          props.deleteRecord(props.record._id);\n        }}\n      >\n        Delete\n      </button>\n    </td>\n  </tr>\n);\n\nexport default function RecordList() {\n  const [records, setRecords] = useState([]);\n\n  // This method fetches the records from the database.\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`/record/`);\n\n      if (!response.ok) {\n        const message = `An error occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const records = await response.json();\n      setRecords(records);\n    }\n\n    getRecords();\n\n    return; \n  }, [records.length]);\n\n  // This method will delete a record\n  async function deleteRecord(id) {\n    await fetch(`/${id}`, {\n      method: \"DELETE\"\n    });\n\n    const newRecords = records.filter((el) => el._id !== id);\n    setRecords(newRecords);\n  }\n\n  // This method will map out the records on the table\n  function recordList() {\n    return records.map((record) => {\n      return (\n        <Record\n          record={record}\n          deleteRecord={() => deleteRecord(record._id)}\n          key={record._id}\n        />\n      );\n    });\n  }\n\n  // This following section will display the table with the records of individuals.\n  return (\n    <div>\n      <h3>Record List</h3>\n      <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Position</th>\n            <th>Level</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>{recordList()}</tbody>\n      </table>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\n\nexport default function Edit() {\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    level: \"\",\n    records: [],\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`/record/${params.id.toString()}`);\n\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const record = await response.json();\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      setForm(record);\n    }\n\n    fetchData();\n\n    return;\n  }, [params.id, navigate]);\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedPerson = {\n      name: form.name,\n      position: form.position,\n      level: form.level,\n    };\n\n    // This will send a post request to update the data in the database.\n    await fetch(`/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedPerson),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    });\n\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes input from the user to update the data.\n  return (\n    <div>\n      <h3>Update Record</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={form.name}\n            onChange={(e) => updateForm({ name: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"position\">Position: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"position\"\n            value={form.position}\n            onChange={(e) => updateForm({ position: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionIntern\"\n              value=\"Intern\"\n              checked={form.level === \"Intern\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionIntern\" className=\"form-check-label\">Intern</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionJunior\"\n              value=\"Junior\"\n              checked={form.level === \"Junior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionJunior\" className=\"form-check-label\">Junior</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionSenior\"\n              value=\"Senior\"\n              checked={form.level === \"Senior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionSenior\" className=\"form-check-label\">Senior</label>\n        </div>\n        </div>\n        <br />\n\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Update Record\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\n\nexport default function Create() {\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    level: \"\",\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newPerson = { ...form };\n\n    await fetch(\"/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newPerson),\n    })\n    .catch(error => {\n      window.alert(error);\n      return;\n    });\n\n    setForm({ name: \"\", position: \"\", level: \"\" });\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return (\n    <div>\n      <h3>Create New Record</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={form.name}\n            onChange={(e) => updateForm({ name: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"position\">Position</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"position\"\n            value={form.position}\n            onChange={(e) => updateForm({ position: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionIntern\"\n              value=\"Intern\"\n              checked={form.level === \"Intern\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionIntern\" className=\"form-check-label\">Intern</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionJunior\"\n              value=\"Junior\"\n              checked={form.level === \"Junior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionJunior\" className=\"form-check-label\">Junior</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionSenior\"\n              value=\"Senior\"\n              checked={form.level === \"Senior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionSenior\" className=\"form-check-label\">Senior</label>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Create person\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\n\n// We use Route in order to define the different routes of our application\nimport { Route, Routes } from \"react-router-dom\";\n\n// We import all the components we need in our app\nimport Navbar from \"./components/navbar\";\nimport RecordList from \"./components/recordList\";\nimport Edit from \"./components/edit\";\nimport Create from \"./components/create\";\n\nconst App = () => {\n  return (\n    <div>\n      <Navbar />\n      <div style={{ margin: 20 }}>\n      <Routes>\n        <Route exact path=\"/\" element={<RecordList />} />\n        <Route path=\"/edit/:id\" element={<Edit />} />\n        <Route path=\"/create\" element={<Create />} />\n      </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}